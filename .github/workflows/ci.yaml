name: Continuous integration
on: 
 push:
   branches:
     - develop
jobs:
  testpack:
    runs-on: ubuntu-18.04
    steps:
      - name: set up node.js
        uses: actions/setup-node@v1
        with:
            go-version: 12.x
      - name: check out code
        uses: actions/checkout@v2
      - name: unit test 
        run: |
            yarn
            yarn test
      - name: create distribution 
        run: |
            yarn run build
            yarn run pack
      - name: check for any changes through git
        id: git_diff
        run: |
            echo "::set-output name=git_changes::yes"
            if git diff-index --quiet HEAD; then echo "::set-output name=git_changes::no"; fi
      - name: extract user information 
        if: contains(steps.git_diff.outputs.git_changes, 'no') 
        id: user_info
        uses: actions/github-script@v1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
              const { data } = await github.users.getByUsername({
                username: context.payload.sender.login
              })
              core.setOutput("name", data.name)
              core.setOutput("email", data.email)
      - name: setup git identity
        if: contains(steps.git_diff.outputs.git_changes, 'no') 
        run: |
            git config --global user.email ${{ steps.user_info.outputs.email }}
            git config --global user.name ${{ steps.user_info.outputs.name }}
      - name: push the new distribution
        if: contains(steps.git_diff.outputs.git_changes, 'no') 
        run: |
            git add dist
            git commit -a -m 'update dist on '$(date +"%m-%d-%Y:%H:%m:%S")
            git push origin $(git rev-parse --abbrev-ref HEAD)